class ChainSegment {
  Vec2 anchor;
  float len;
  float k = 0.1;
  ChainSegment previous;
  ChainSegment next;
  
  Body body;
  BodyDef bd;
  FixtureDef fd;
  RevoluteJoint joint;

  ChainSegment( int x, int y ) {
    setAnchor( x, y );
  }
  
  ChainSegment( int x, int y, ChainSegment previous ) {
    setAnchor( x, y );
    this.previous = previous;

    // Define the body
    bd = new BodyDef();
    bd.position.x = anchor.x;
    bd.type = BodyType.DYNAMIC;
    
    body = box2d.createBody(bd);

    // Define the polygon / box shape
    PolygonShape sd = new PolygonShape();
    sd.setAsBox(5, 20);
    
    FixtureDef fd = new FixtureDef();
    fd.shape = sd;
    fd.density=100;
    fd.friction=0.5;
    fd.restitution=0.2;
    
    body.createFixture(fd);

    // Create the shape on the body
    //body.createShape( sd );
    //body.setMassFromShapes();

    // Create the joint definition
    RevoluteJointDef jd = new RevoluteJointDef();
    // Connect the bodies
    jd.localAnchorA = previous.body.position;
    jd.localAnchorB = body.anchor;

    // Create the joint
    box2d.world.createJoint(jd);

  }
  
  void setAnchor( int x, int y ) {
    if ( anchor == null ) {
      anchor = new Vec2();
    }
    anchor.x = x;
    anchor.y = y;
  }
  
  void draw() {
    if ( null == previous ) {
      ellipse( anchor.x, anchor.y, 10, 10 );
      return;
    }
    line( anchor.x, anchor.y, previous.anchor.x, previous.anchor.y );
    if ( null == next ) {
      ellipse( anchor.x, anchor.y, 10, 10 );
    }
  }

}